<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.etycx.marry.modules.product.dao.MarryProductDao">
    
	<sql id="marryProductColumns">
		a.id AS "id",
		a.dict_ids AS "dictIds",
		a.type AS "type",
		a.top_on AS "topOn",
		a.show_state AS "showState",
		a.name AS "name",
		a.brief AS "brief",
		a.specification AS "specification",
		a.story AS "story",
		a.content AS "content",
		a.cover_path AS "coverPath",
		a.pic_path AS "picPath",
		a.sort AS "sort",
		a.create_time AS "createTime",
		a.update_time AS "updateTime",
		a.create_user_id AS "createUserId",
		a.update_user_id AS "updateUserId"
	</sql>
	
	<sql id="marryProductJoins">
	</sql>
    
	<select id="get" resultType="MarryProduct">
		SELECT 
			<include refid="marryProductColumns"/>
		FROM marry_product a
		<include refid="marryProductJoins"/>
		WHERE a.id = #{id}
	</select>

	<select id="selectProductByShowState" resultType="MarryProduct">
		SELECT
		<include refid="marryProductColumns"/>
		FROM marry_product a
		<include refid="marryProductJoins"/>
		WHERE a.show_state = #{showState} limit #{page},#{pageSize}
	</select>

	<select id="selectProductByShowStateCount" resultType="java.lang.Integer">
		SELECT
		count(1)
		FROM marry_product a
		<include refid="marryProductJoins"/>
		WHERE a.show_state = #{showState}
	</select>
	
	<select id="findList" resultType="MarryProduct">
		SELECT 
			<include refid="marryProductColumns"/>
		FROM marry_product a
		<include refid="marryProductJoins"/>
		<where>
			<if test="type != null">
				AND a.type = #{type}
			</if>
			<if test="dictIds != null and dictIds != ''">
				AND a.dict_ids = #{dictIds}
			</if>
			<if test="name != null and name != ''">
				AND a.name LIKE 
					<if test="dbName == 'oracle'">'%'||#{name}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{name}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{name},'%')</if>
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.sort DESC,create_time DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="MarryProduct">
		SELECT 
			<include refid="marryProductColumns"/>
		FROM marry_product a
		<include refid="marryProductJoins"/>
		<where>
			
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO marry_product(
			dict_ids,
			type,
			top_on,
			show_state,
			name,
			brief,
			specification,
			story,
			content,
			cover_path,
			pic_path,
			sort,
			create_time,
			update_time,
			create_user_id,
			update_user_id
		) VALUES (
			#{dictIds},
			#{type},
			#{topOn},
			#{showState},
			#{name},
			#{brief},
			#{specification},
			#{story},
			#{content},
			#{coverPath},
			#{picPath},
			#{sort},
			#{createTime},
			#{updateTime},
			#{createUserId},
			#{updateUserId}
		)
	</insert>
	
	<update id="update">
		UPDATE marry_product SET 	
			dict_ids = #{dictIds},
			type = #{type},
			top_on = #{topOn},
			show_state = #{showState},
			name = #{name},
			brief = #{brief},
			specification = #{specification},
			story = #{story},
			content = #{content},
			cover_path = #{coverPath},
			pic_path = #{picPath},
			sort = #{sort},
			create_time = #{createTime},
			update_time = #{updateTime},
			create_user_id = #{createUserId},
			update_user_id = #{updateUserId}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		DELETE FROM marry_product
		WHERE id = #{id}
	</update>

	<select id="countProduct" resultType="int" parameterType="map">
		SELECT
		count(1)
		FROM
		marry_product a
		<where>
			<if test="searchContent != null and searchContent != ''">
				AND a.name LIKE CONCAT('%', #{searchContent}, '%')
			</if>
			<if test="type != null">
				a.type = #{type}
			</if>
			<if test="dictIds != null and dictIds != ''">
				AND a.dict_ids in
				<foreach collection="dictIds" index="index" item="dictId" open="(" separator="," close=")">
					#{dictId}
				</foreach>
			</if>
		</where>
	</select>

	<select id="selectProductList" resultType="MarryProduct" parameterType="map">
		SELECT
		<include refid="marryProductColumns"/>
		FROM
		marry_product a
		<where>
			<if test="type != null">
				a.type = #{type}
			</if>
			<if test="searchContent != null and searchContent != ''">
				AND a.name LIKE CONCAT('%', #{searchContent}, '%')
			</if>
			<if test="topOn != null">
				AND a.top_on = #{topOn}
			</if>
			<if test="dictIds != null and dictIds != ''">
				AND a.dict_ids in
				<foreach collection="dictIds" index="index" item="dictId" open="(" separator="," close=")">
					#{dictId}
				</foreach>
			</if>
		</where>
		ORDER BY a.top_on DESC,a.sort DESC,create_time DESC
		<if test="pageNo != null and pageSize != null">
			limit #{pageNo},#{pageSize}
		</if>
	</select>

	<select id="getOtherProductList" resultType="MarryProduct" parameterType="map">
		SELECT
		<include refid="marryProductColumns"/>
		FROM
		marry_product a
		where 1=1
		<if test="id != null and type != null">
			and  a.type = #{type} and id not in (#{id})
		</if>
		ORDER BY a.sort desc,create_time desc limit #{pageSize}
	</select>
	
</mapper>